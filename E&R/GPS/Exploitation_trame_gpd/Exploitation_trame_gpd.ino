struct gpsData {
  String type ; // sans le $
  String time ; // format HH:MM:SS
  float timeMs ; // millisecondes supplémentaires de time
  double lat ; // >0 N <0 S en degrés décimaux
  double lon ; // >0 E <0 W en degrés décimaux
  bool posGps ; // vrai si positionnement GPS faux sinon
  int satNum ; // nombre de satellites utilisés?
  float hdop ; // précision horizontale en mètres
  float altitude ; // en mètre
  uint8_t cheksum ; // en binaire
  bool cheksumOk ; // vrai si cheksum correcte
} ;

//String trame2 = "$GPGLL,5300.97914,N,00259.98174,E,125926,A*28";
String trame1 = "$GPGGA,064036.289,4836.5375,N,00740.9373,E,1,04,3.2,200.2,M,,,,,,0000,*22";
struct gpsData data1 ;
void fillData( String trame, struct gpsData& data ) ;
void printData( struct gpsData data);
String degreeLat, minuLat, degreeLon, minuLon, orientationLat, orientationLon;
int chara1, chara2;

void setup() {
  Serial.begin(115200);
  Serial.print("\n\n\n\n");
  fillData(trame1, data1);
  Serial.println("Trame reçue " + trame1 ) ;
  printData(data1);
}

void loop() {
}

void fillData( String trame, struct gpsData& data) {
  int separator1 = trame.indexOf(",");
  data.type = trame.substring(1, separator1);

  int separator2 = trame.indexOf(".", separator1 + 1);
  data.time = trame.substring(separator1 + 1, separator1 + 3) + ":" + trame.substring(separator1 + 3, separator1 + 5 ) + ":" + trame.substring(separator1 + 5, separator1 + 7);

  separator1 = trame.indexOf(",", separator2 + 1);
  data.timeMs = (trame.substring(separator2, separator1)).toFloat();

  separator2 = trame.indexOf(".", separator1);
  int separator3 = trame.indexOf(",", separator2);
  degreeLat = trame.substring(separator1 + 1, separator1 + 3);
  minuLat = trame.substring(separator1 + 3, separator3);
  data.lat = (degreeLat.toDouble() + minuLat.toDouble() / 60);

  separator1 = trame.indexOf(",", separator3 + 1);
  if (trame.substring(separator3 + 1, separator1) == "N") {
    orientationLat = " NORD";
  }
  if (trame.substring(separator3 + 1, separator1) == "S") {
    orientationLat = " SUD";
  }

  separator2 = trame.indexOf(".", separator1);
  separator3 = trame.indexOf(",", separator2);
  degreeLon = trame.substring(separator1 + 1, separator1 + 4);
  minuLon = trame.substring(separator1 + 4, separator3);
  data.lon = (degreeLon.toDouble() + minuLon.toDouble() / 60);

  separator1 = trame.indexOf(",", separator3 + 1);
  if (trame.substring(separator3 + 1, separator1) == "O") {
    orientationLon = " OUEST";
  }
  if (trame.substring(separator3 + 1, separator1) == "E") {
    orientationLon = " EST";
  }

  separator2 = trame.indexOf(",", separator1 + 1);
  if (trame.substring(separator1 + 1, separator2) == "1") {
    data.posGps = 1;
  }
  if (trame.substring(separator1 + 1, separator2) == "0") {
    data.posGps = 0;
  }

  separator1 = trame.indexOf(",", separator2 + 1);
  data.satNum = trame.substring(separator2 + 1, separator1).toInt();

  separator2 = trame.indexOf(",", separator1 + 1);
  data.hdop = trame.substring(separator1 + 1, separator2).toFloat();

  separator2 = trame.indexOf("*", 1);
  chara1 = cheksum(trame.substring(separator2 + 1, separator2 + 2));
  chara1 = data.cheksum * 16;

  chara2 = cheksum(trame.substring(separator2 + 2, separator2 + 3));
  chara2 = data.cheksum * 16;

  data.cheksum = chara1 + chara2;


  int somme = 0;
  for (int i = 1; i < separator2; i++) {
    somme = somme ^ trame[i];
  }
  data.cheksumOk = (uint8) somme;
}

int cheksum(String check) {
  if (check.toInt() >= 0 && check.toInt() <= 9) {
    return check.toInt();
  }
  if (check >= "A" && check <= "F") {
    check = check.toInt() + 10 - 'A';
    return check.toInt();
  }
}

void printData( struct gpsData data) {
  Serial.println("type : " + data.type) ;
  Serial.println("time : " + data.time);
  Serial.println("timeMs : " + String(data.timeMs, 3) );
  Serial.println("lat : " + String(data.lat, 6) + " " + orientationLat);
  Serial.println("lon : " + String(data.lon, 6) + " " + orientationLon);
  Serial.println("gps mode : " + String(data.posGps));
  Serial.println("sat number : " + String(data.satNum));
  Serial.println("horiz. dilution :" + String(data.hdop));
  Serial.println("checksum : 0x" + String(data.cheksum, HEX));
  //  Serial.println("type : " + trame1.substring(1, 6)) ;
  //  Serial.println("time : " + trame1.substring(7, 9) + ":" + trame1.substring(9, 11) + ":" + trame1.substring(11, 13));
  //  Serial.println("timeMs : 0." + trame1.substring(14, 17));
  //  Serial.println("lat : ");
  //  Serial.println("lon : ");
  //  Serial.println("gps mode : " + trame1.substring(43, 44));
  //  Serial.println("sat number : " + trame1.substring(46, 47));
  //  Serial.println("horiz. dilution :" + trame1.substring(48, 51));
  //  Serial.println("checksum : 0x" + trame1.substring(71, 73));
}

bool verifyChksum(String trame ) {

}
